{"version":3,"sources":["../../../../src/components/Button/Button.tsx"],"names":["classNames","React","styles","Button","onClick","disabled","type","size","children","className","ariaLabel","classes","button","a11yProps","buttonWrapper"],"mappings":";;AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,MAA8E,OAA9E;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAoCA;;;AAGA,MAAMC,MAAuC,GAAG,CAAC;AAC/CC,EAAAA,OAD+C;AAE/CC,EAAAA,QAAQ,GAAG,KAFoC;AAG/CC,EAAAA,IAAI,GAAG,QAHwC;AAI/CC,EAAAA,IAAI,GAAG,QAJwC;AAK/CC,EAAAA,QAL+C;AAM/CC,EAAAA,SAN+C;AAO/CC,EAAAA;AAP+C,CAAD,KAQ1C;AACJ,QAAMC,OAAO,GAAGX,UAAU,CACxBE,MAAM,CAACU,MADiB,EAExBV,MAAM,CAACK,IAAD,CAFkB,EAGxBE,SAHwB,CAA1B;AAMA,QAAMI,SAAS,GAAGH,SAAS,GACzB;AAAE,kBAAcA;AAAhB,GADyB,GAEzB,IAFF;AAIA,QAAME,MAAoB,gBACxB;AACI,IAAA,SAAS,EAAED,OADf;AAEI,IAAA,IAAI,EAAEL,IAFV;AAGI,IAAA,OAAO,EAAEF,OAHb;AAII,IAAA,QAAQ,EAAEC;AAJd,KAKSQ,SALT,GAOKL,QAPL,CADF;;AAYA,MAAIH,QAAJ,EAAc;AACZ,WAAOO,MAAP;AACD;;AAED,sBACE;AAAM,IAAA,SAAS,EAAEV,MAAM,CAACY;AAAxB,KACGF,MADH,CADF;AAKD,CAxCD;;AA0CA,eAAeT,MAAf","sourcesContent":["import classNames from 'classnames';\nimport React, { FC, MouseEventHandler, PropsWithChildren, ReactElement } from 'react';\nimport styles from './Button.module.scss';\n\ntype ButtonPropsType = {\n  /**\n   * Define button behavior. Default: button\n   */\n  type?: 'button' | 'submit' | 'reset';\n\n  /**\n   * Define button size. Default: normal\n   */\n  size?: 'normal' | 'small' | 'large';\n\n  /**\n   * Disable button. Default: false\n   */\n  disabled?: boolean;\n\n  /**\n   * Register click event handler.\n   */\n  onClick?: MouseEventHandler;\n\n  /**\n   * Add a class name. Optional.\n   */\n  className?: string;\n\n  /**\n   * Define 'aria-label' attribute for screen readers. Optional.\n   */\n  ariaLabel?: string;\n}\n\ntype ButtonPropsTypeWithChildren = PropsWithChildren<ButtonPropsType>\n\n/**\n * A simple button.\n */\nconst Button: FC<ButtonPropsTypeWithChildren> = ({\n  onClick,\n  disabled = false,\n  type = 'button',\n  size = 'normal',\n  children,\n  className,\n  ariaLabel\n}) => {\n  const classes = classNames(\n    styles.button,\n    styles[size],\n    className\n  );\n\n  const a11yProps = ariaLabel ? \n    { \"aria-label\": ariaLabel } : \n    null;\n\n  const button: ReactElement = (\n    <button\n        className={classes}\n        type={type}\n        onClick={onClick}\n        disabled={disabled}\n        {... a11yProps}\n      >\n        {children}\n    </button>\n  );\n\n  if (disabled) {\n    return button;\n  }\n\n  return (\n    <span className={styles.buttonWrapper}>\n      {button}\n    </span>\n  );\n};\n\nexport default Button;\n"],"file":"Button.js"}