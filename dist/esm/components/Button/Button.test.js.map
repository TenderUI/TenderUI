{"version":3,"sources":["../../../../src/components/Button/Button.test.tsx"],"names":["cleanup","fireEvent","render","React","Button","testLabel","describe","afterEach","it","getByText","element","expect","toBeInTheDocument","closest","toHaveAttribute","handleClick","jest","fn","click","toHaveBeenCalled","not","toHaveClass","container","firstChild"],"mappings":"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","sourcesContent":["import { cleanup, fireEvent, render } from '@testing-library/react';\nimport React from 'react';\nimport Button from './Button';\n\nconst testLabel = 'A button';\n\ndescribe('Button', () => {\n  afterEach(cleanup);\n\n  it('displays the label', () => {\n    const { getByText } = render(<Button>{testLabel}</Button>);\n    const element = getByText(testLabel);\n    expect(element).toBeInTheDocument();\n  });\n\n  it('can be of the type submit', () => {\n    const { getByText } = render(<Button type='submit'>{testLabel}</Button>);\n    const element = getByText(testLabel);\n    expect(element.closest('button')).toHaveAttribute('type', 'submit');\n  });\n\n  it('can be of the type reset', () => {\n    const { getByText } = render(<Button type='reset'>{testLabel}</Button>);\n    const element = getByText(testLabel);\n    expect(element.closest('button')).toHaveAttribute('type', 'reset');\n  });\n\n  it('can be of the type button', () => {\n    const { getByText } = render(<Button type='button'>{testLabel}</Button>);\n    const element = getByText(testLabel);\n    expect(element.closest('button')).toHaveAttribute('type', 'button');\n  });\n\n  it('is of the type button by default', () => {\n    const { getByText } = render(<Button>{testLabel}</Button>);\n    const element = getByText(testLabel);\n    expect(element.closest('button')).toHaveAttribute('type', 'button');\n  });\n\n  it('handles clicks', () => {\n    const handleClick = jest.fn();\n    const { getByText } = render(<Button onClick={handleClick}>{testLabel}</Button>);\n    const element = getByText(testLabel);\n    fireEvent.click(element);\n    expect(handleClick).toHaveBeenCalled();\n  });\n\n  it('ignores clicks when disabled', () => {\n    const handleClick = jest.fn();\n    const { getByText } = render(<Button onClick={handleClick} disabled>{testLabel}</Button>);\n    const element = getByText(testLabel);\n    fireEvent.click(element);\n    expect(handleClick).not.toHaveBeenCalled();\n  });\n\n  it('supports small size', () => {\n    const { getByText } = render(<Button size='small'>{testLabel}</Button>);\n    const element = getByText(testLabel);\n    expect(element.closest('span')).toHaveClass('small');\n  });\n\n  it('supports aria-label attribute', () => {\n    const { container } = render(<Button ariaLabel={testLabel}></Button>);\n    expect(container.firstChild.firstChild).toHaveAttribute('aria-label', testLabel);\n  });\n});\n"],"file":"Button.test.js"}