{"version":3,"sources":["../../../../src/components/IconButton/IconButton.test.tsx"],"names":["cleanup","fireEvent","render","React","ReactComponent","Icon","IconButton","testLabel","describe","afterEach","it","container","expect","firstChild","toMatch","getByText","element","closest","toHaveAttribute","handleClick","jest","fn","click","toHaveBeenCalled","not","toHaveClass"],"mappings":"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","sourcesContent":["import { cleanup, fireEvent, render } from '@testing-library/react';\nimport React from 'react';\nimport { ReactComponent as Icon } from '../../img/icons/icon-flag.svg';\nimport IconButton from './IconButton';\n\n// @fixme Review tests and adapt them to IconButton.\n\nconst testLabel = <Icon />;\n\ndescribe('IconButton', () => {\n  afterEach(cleanup);\n\n  it('displays the label', () => {\n    const { container } = render(<IconButton>{testLabel}</IconButton>);\n    // const element = getByText(testLabel);\n    expect(container.firstChild).toMatch('testLabel');\n    // expect(element).toBeInTheDocument();\n  });\n\n  it('can be of the type submit', () => {\n    const { getByText } = render(<IconButton type='submit'>{testLabel}</IconButton>);\n    const element = getByText(testLabel);\n    expect(element.closest('IconButton')).toHaveAttribute('type', 'submit');\n  });\n\n  it('can be of the type reset', () => {\n    const { getByText } = render(<IconButton type='reset'>{testLabel}</IconButton>);\n    const element = getByText(testLabel);\n    expect(element.closest('IconButton')).toHaveAttribute('type', 'reset');\n  });\n\n  it('can be of the type IconButton', () => {\n    const { getByText } = render(<IconButton type='IconButton'>{testLabel}</IconButton>);\n    const element = getByText(testLabel);\n    expect(element.closest('IconButton')).toHaveAttribute('type', 'IconButton');\n  });\n\n  it('is of the type IconButton by default', () => {\n    const { getByText } = render(<IconButton>{testLabel}</IconButton>);\n    const element = getByText(testLabel);\n    expect(element.closest('IconButton')).toHaveAttribute('type', 'IconButton');\n  });\n\n  it('handles clicks', () => {\n    const handleClick = jest.fn();\n    const { getByText } = render(<IconButton onClick={handleClick}>{testLabel}</IconButton>);\n    const element = getByText(testLabel);\n    fireEvent.click(element);\n    expect(handleClick).toHaveBeenCalled();\n  });\n\n  it('ignores clicks when disabled', () => {\n    const handleClick = jest.fn();\n    const { getByText } = render(<IconButton onClick={handleClick} disabled>{testLabel}</IconButton>);\n    const element = getByText(testLabel);\n    fireEvent.click(element);\n    expect(handleClick).not.toHaveBeenCalled();\n  });\n\n  it('supports small size', () => {\n    const { getByText } = render(<IconButton size='small'>{testLabel}</IconButton>);\n    const element = getByText(testLabel);\n    expect(element.closest('IconButton')).toHaveClass('small');\n  });\n});\n"],"file":"IconButton.test.js"}