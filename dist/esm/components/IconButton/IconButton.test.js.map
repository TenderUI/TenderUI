{"version":3,"sources":["../../../../src/components/IconButton/IconButton.test.tsx"],"names":["cleanup","render","fireEvent","React","ReactComponent","Icon","IconButton","childIcon","ariaLabel","describe","afterEach","it","container","expect","firstChild","toHaveAttribute","handleClick","jest","fn","element","click","toHaveBeenCalled","not","toHaveClass"],"mappings":"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","sourcesContent":["import { cleanup, render, fireEvent } from '@testing-library/react';\nimport React from 'react';\nimport { ReactComponent as Icon } from '../../img/icons/icon-flag.svg';\nimport IconButton from './IconButton';\n\n// @fixme Review tests and fix issues.\n\nconst childIcon = <Icon />;\nconst ariaLabel = 'Test label';\n\ndescribe('IconButton', () => {\n  afterEach(cleanup);\n\n  // it('displays the label', () => {\n  //   const { container } = render(<IconButton ariaLabel=\"Submit\">{childIcon}</IconButton>);\n  //   // const element = container.firstChild;\n  //   expect(container.firstChild).toMatch(childIcon);\n  //   // expect(element).toBeInTheDocument();\n  // });\n\n  it('can be of the type submit', () => {\n    const { container } = render(<IconButton type='submit' ariaLabel=\"Submit\">{childIcon}</IconButton>);\n    expect(container.firstChild).toHaveAttribute('type', 'submit');\n  });\n\n  it('can be of the type reset', () => {\n    const { container } = render(<IconButton type='reset' ariaLabel={ariaLabel}>{childIcon}</IconButton>);\n    expect(container.firstChild).toHaveAttribute('type', 'reset');\n  });\n\n  it('can be of the type button', () => {\n    const { container } = render(<IconButton type='button' ariaLabel={ariaLabel}>{childIcon}</IconButton>);\n    expect(container.firstChild).toHaveAttribute('type', 'button');\n  });\n\n  it('is of the type button by default', () => {\n    const { container } = render(<IconButton ariaLabel={ariaLabel}>{childIcon}</IconButton>);\n    expect(container.firstChild).toHaveAttribute('type', 'button');\n  });\n\n  it('handles clicks', () => {\n    const handleClick = jest.fn();\n    const { container } = render(<IconButton onClick={handleClick} ariaLabel={ariaLabel}>{childIcon}</IconButton>);\n    const element = container.firstChild;\n    fireEvent.click(element);\n    expect(handleClick).toHaveBeenCalled();\n  });\n\n  it('ignores clicks when disabled', () => {\n    const handleClick = jest.fn();\n    const { container } = render(<IconButton onClick={handleClick} ariaLabel={ariaLabel} disabled>{childIcon}</IconButton>);\n    const element = container.firstChild;\n    fireEvent.click(element);\n    expect(handleClick).not.toHaveBeenCalled();\n  });\n\n  it('supports small size', () => {\n    const { container } = render(<IconButton size='small' ariaLabel={ariaLabel}>{childIcon}</IconButton>);\n    expect(container.firstChild).toHaveClass('small');\n  });\n\n  it('supports aria-label attribute', () => {\n    const { container } = render(<IconButton ariaLabel={ariaLabel}>{childIcon}</IconButton>);\n    expect(container.firstChild).toHaveAttribute('aria-label', ariaLabel);\n  });\n});\n"],"file":"IconButton.test.js"}