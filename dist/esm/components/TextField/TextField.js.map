{"version":3,"sources":["../../../../src/components/TextField/TextField.tsx"],"names":["classNames","React","cloneElement","isValidElement","a11yIconHiddenProps","styles","TextField","type","size","shape","disabled","className","leftIcon","rightIcon","rest","classes","wrapper","leftIconAttributes","leftIconElement","rightIconAttributes","rightIconElement","inputClasses","input","hasLeftIcon","hasRightIcon","placeholder","tabIndex"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,UAAP,MAAuB,MAAvB;AACA,OAAOC,KAAP,IAAgBC,YAAhB,EAAkCC,cAAlC,QAAsE,OAAtE;AACA,SAASC,mBAAT,QAAoC,cAApC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;AAiDA;;;AAGA,MAAMC,SAAiC,GAAG,UASpC;AAAA,MATqC;AACzCC,IAAAA,IAAI,GAAG,MADkC;AAEzCC,IAAAA,IAAI,GAAG,QAFkC;AAGzCC,IAAAA,KAAK,GAAG,QAHiC;AAIzCC,IAAAA,QAAQ,GAAG,KAJ8B;AAKzCC,IAAAA,SALyC;AAMzCC,IAAAA,QANyC;AAOzCC,IAAAA;AAPyC,GASrC;AAAA,MADDC,IACC;;AACJ,QAAMC,OAAO,GAAGf,UAAU,CACxBK,MAAM,CAACW,OADiB,EAEvBX,MAAD,CAAgBG,IAAhB,CAFwB,EAGvBH,MAAD,CAAgBI,KAAhB,CAHwB,EAIxB;AAAE,KAAEJ,MAAD,CAAgBK,QAAjB,GAA4BA;AAA9B,GAJwB,EAKxBC,SALwB,CAA1B;;AAQA,QAAMM,kBAAkB,mCACnBb,mBADmB;AAEtBO,IAAAA,SAAS,EAAEX,UAAU,CAACK,MAAM,CAACO,QAAR;AAFC,IAAxB;;AAIA,QAAMM,eAAe,GAAG,aAAAf,cAAc,CAACS,QAAD,CAAd,gBACpBV,YAAY,CAACU,QAAD,EAAWK,kBAAX,CADQ,GAEpB,IAFJ;;AAIA,QAAME,mBAAmB,mCACpBf,mBADoB;AAEvBO,IAAAA,SAAS,EAAEX,UAAU,CAACK,MAAM,CAACQ,SAAR;AAFE,IAAzB;;AAIA,QAAMO,gBAAgB,GAAG,aAAAjB,cAAc,CAACU,SAAD,CAAd,gBACrBX,YAAY,CAACW,SAAD,EAAYM,mBAAZ,CADS,GAErB,IAFJ;AAIA,QAAME,YAAY,GAAGrB,UAAU,CAACK,MAAM,CAACiB,KAAR,EAAe;AAC5C,KAACjB,MAAM,CAACkB,WAAR,GAAsBL,eAAe,IAAI,IADG;AAE5C,KAACb,MAAM,CAACmB,YAAR,GAAuBJ,gBAAgB,IAAI;AAFC,GAAf,CAA/B;AAKA,sBACE;AAAM,IAAA,SAAS,EAAEL;AAAjB,KACGG,eADH,eAEE;AACE,IAAA,SAAS,EAAEG,YADb;AAEE,IAAA,IAAI,EAAEd,IAFR;AAGE,IAAA,QAAQ,EAAEG;AAHZ,KAIMI,IAJN,EAFF,EAQGM,gBARH,CADF;AAYD,CAnDD;;;AA9CEb,EAAAA,I,aAAO,M,EAAS,U;AAKhBC,EAAAA,I,aAAO,Q,EAAW,O,EAAU,O;AAK5BC,EAAAA,K,aAAQ,S,EAAY,Q;AAKpBC,EAAAA,Q;AAKAC,EAAAA,S;AAKAc,EAAAA,W;AAKAC,EAAAA,Q;AAKAd,EAAAA,Q;AAKAC,EAAAA,S;;AA2DF,eAAeP,SAAf","sourcesContent":["import classNames from \"clsx\";\nimport React, { cloneElement, FC, isValidElement, ReactElement } from \"react\";\nimport { a11yIconHiddenProps } from \"../../config\";\nimport styles from \"./TextField.module.scss\";\n\ntype TextFieldPropsType = {\n  /**\n   * Define button behavior. Default: text\n   */\n  type?: \"text\" | \"password\";\n\n  /**\n   * Define input size. Default: normal\n   */\n  size?: \"normal\" | \"small\" | \"large\";\n\n  /**\n   * Define the shape of the button (border radius). Default: rounded.\n   */\n  shape?: \"rounded\" | \"circle\";\n\n  /**\n   * Disable button. Default: false\n   */\n  disabled?: boolean;\n\n  /**\n   * Add a class name. Optional.\n   */\n  className?: string;\n\n  /**\n   * Add a placeholder text. Optional.\n   */\n  placeholder?: string;\n\n  /**\n   * Add a tabindex attribute. Optional.\n   */\n  tabIndex?: number;\n\n  /**\n   * Left icon. Optional.\n   */\n  leftIcon?: ReactElement;\n\n  /**\n   * Right icon. Optional.\n   */\n  rightIcon?: ReactElement;\n};\n\n/**\n * A text field.\n */\nconst TextField: FC<TextFieldPropsType> = ({\n  type = \"text\",\n  size = \"normal\",\n  shape = \"circle\",\n  disabled = false,\n  className,\n  leftIcon,\n  rightIcon,\n  ...rest\n}) => {\n  const classes = classNames(\n    styles.wrapper,\n    (styles as any)[size],\n    (styles as any)[shape],\n    { [(styles as any).disabled]: disabled },\n    className\n  );\n\n  const leftIconAttributes = {\n    ...a11yIconHiddenProps,\n    className: classNames(styles.leftIcon)\n  };\n  const leftIconElement = isValidElement(leftIcon)\n    ? cloneElement(leftIcon, leftIconAttributes)\n    : null;\n\n  const rightIconAttributes = {\n    ...a11yIconHiddenProps,\n    className: classNames(styles.rightIcon)\n  };\n  const rightIconElement = isValidElement(rightIcon)\n    ? cloneElement(rightIcon, rightIconAttributes)\n    : null;\n\n  const inputClasses = classNames(styles.input, {\n    [styles.hasLeftIcon]: leftIconElement != null,\n    [styles.hasRightIcon]: rightIconElement != null,\n  });\n\n  return (\n    <span className={classes}>\n      {leftIconElement}\n      <input\n        className={inputClasses}\n        type={type}\n        disabled={disabled}\n        {...rest}\n      />\n      {rightIconElement}\n    </span>\n  );\n};\n\nexport default TextField;\n"],"file":"TextField.js"}