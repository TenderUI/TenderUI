{"version":3,"sources":["../../../../src/components/IconButton/IconButton.test.tsx"],"names":["testLabel","describe","afterEach","cleanup","it","container","expect","firstChild","toMatch","getByText","element","closest","toHaveAttribute","handleClick","jest","fn","fireEvent","click","toHaveBeenCalled","not","toHaveClass"],"mappings":"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","sourcesContent":["import { cleanup, fireEvent, render } from '@testing-library/react';\nimport React from 'react';\nimport { ReactComponent as Icon } from '../../img/icons/icon-flag.svg';\nimport IconButton from './IconButton';\n\n// @fixme Review tests and adapt them to IconButton.\n\nconst testLabel = <Icon />;\n\ndescribe('IconButton', () => {\n  afterEach(cleanup);\n\n  it('displays the label', () => {\n    const { container } = render(<IconButton>{testLabel}</IconButton>);\n    // const element = getByText(testLabel);\n    expect(container.firstChild).toMatch('testLabel');\n    // expect(element).toBeInTheDocument();\n  });\n\n  it('can be of the type submit', () => {\n    const { getByText } = render(<IconButton type='submit'>{testLabel}</IconButton>);\n    const element = getByText(testLabel);\n    expect(element.closest('IconButton')).toHaveAttribute('type', 'submit');\n  });\n\n  it('can be of the type reset', () => {\n    const { getByText } = render(<IconButton type='reset'>{testLabel}</IconButton>);\n    const element = getByText(testLabel);\n    expect(element.closest('IconButton')).toHaveAttribute('type', 'reset');\n  });\n\n  it('can be of the type IconButton', () => {\n    const { getByText } = render(<IconButton type='IconButton'>{testLabel}</IconButton>);\n    const element = getByText(testLabel);\n    expect(element.closest('IconButton')).toHaveAttribute('type', 'IconButton');\n  });\n\n  it('is of the type IconButton by default', () => {\n    const { getByText } = render(<IconButton>{testLabel}</IconButton>);\n    const element = getByText(testLabel);\n    expect(element.closest('IconButton')).toHaveAttribute('type', 'IconButton');\n  });\n\n  it('handles clicks', () => {\n    const handleClick = jest.fn();\n    const { getByText } = render(<IconButton onClick={handleClick}>{testLabel}</IconButton>);\n    const element = getByText(testLabel);\n    fireEvent.click(element);\n    expect(handleClick).toHaveBeenCalled();\n  });\n\n  it('ignores clicks when disabled', () => {\n    const handleClick = jest.fn();\n    const { getByText } = render(<IconButton onClick={handleClick} disabled>{testLabel}</IconButton>);\n    const element = getByText(testLabel);\n    fireEvent.click(element);\n    expect(handleClick).not.toHaveBeenCalled();\n  });\n\n  it('supports small size', () => {\n    const { getByText } = render(<IconButton size='small'>{testLabel}</IconButton>);\n    const element = getByText(testLabel);\n    expect(element.closest('IconButton')).toHaveClass('small');\n  });\n});\n"],"file":"IconButton.test.js"}