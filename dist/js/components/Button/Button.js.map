{"version":3,"sources":["../../../../src/components/Button/Button.tsx"],"names":["Button","onClick","disabled","type","size","shape","children","className","ariaLabel","a11yProps","classes","styles","buttonWrapper","button"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;AAyCA;;;AAGA,IAAMA,MAAuC,GAAG,SAA1CA,MAA0C,OAS1C;AAAA,MARJC,OAQI,QARJA,OAQI;AAAA,2BAPJC,QAOI;AAAA,MAPJA,QAOI,8BAPO,KAOP;AAAA,uBANJC,IAMI;AAAA,MANJA,IAMI,0BANG,QAMH;AAAA,uBALJC,IAKI;AAAA,MALJA,IAKI,0BALG,QAKH;AAAA,wBAJJC,KAII;AAAA,MAJJA,KAII,2BAJI,QAIJ;AAAA,MAHJC,QAGI,QAHJA,QAGI;AAAA,MAFJC,SAEI,QAFJA,SAEI;AAAA,MADJC,SACI,QADJA,SACI;AAEJ,MAAMC,SAAS,GAAGD,SAAS,GACzB;AAAE,kBAAcA;AAAhB,GADyB,GAEzB,IAFF;AAIA,MAAME,OAAO,GAAG,yBACdC,sBAAOC,aADO,EAEdD,sBAAOP,IAAP,CAFc,EAGdO,sBAAON,KAAP,CAHc,sBAIZM,sBAAOT,QAJK,EAIMA,QAJN,GAKdK,SALc,CAAhB;AAQA,sBACE;AAAM,IAAA,SAAS,EAAEG;AAAjB,kBACE;AACE,IAAA,SAAS,EAAEC,sBAAOE,MADpB;AAEE,IAAA,IAAI,EAAEV,IAFR;AAGE,IAAA,OAAO,EAAEF,OAHX;AAIE,IAAA,QAAQ,EAAEC;AAJZ,KAKOO,SALP,GAOGH,QAPH,CADF,CADF;AAaD,CApCD;;eAsCeN,M","sourcesContent":["import classNames from 'classnames';\nimport React, { FC, MouseEventHandler, PropsWithChildren } from 'react';\nimport styles from './Button.module.scss';\n\ntype ButtonPropsType = {\n  /**\n   * Define button behavior. Default: button\n   */\n  type?: 'button' | 'submit' | 'reset';\n\n  /**\n   * Define button size. Default: normal\n   */\n  size?: 'normal' | 'small' | 'large';\n\n  /**\n   * Define the shape of the button (border radius). Default: rounded.\n   */\n  shape?: 'rounded' | 'circle';\n\n  /**\n   * Disable button. Default: false\n   */\n  disabled?: boolean;\n\n  /**\n   * Register click event handler.\n   */\n  onClick?: MouseEventHandler;\n\n  /**\n   * Add a class name. Optional.\n   */\n  className?: string;\n\n  /**\n   * Define 'aria-label' attribute for screen readers. Optional.\n   */\n  ariaLabel?: string;\n}\n\ntype ButtonPropsTypeWithChildren = PropsWithChildren<ButtonPropsType>\n\n/**\n * A simple button.\n */\nconst Button: FC<ButtonPropsTypeWithChildren> = ({\n  onClick,\n  disabled = false,\n  type = 'button',\n  size = 'normal',\n  shape = 'circle',\n  children,\n  className,\n  ariaLabel\n}) => {\n  \n  const a11yProps = ariaLabel ? \n    { \"aria-label\": ariaLabel } : \n    null;\n\n  const classes = classNames(\n    styles.buttonWrapper,\n    styles[size],\n    styles[shape],\n    {[styles.disabled]: disabled},\n    className\n  );\n\n  return (\n    <span className={classes}>\n      <button\n        className={styles.button}\n        type={type}\n        onClick={onClick}\n        disabled={disabled}\n        {... a11yProps}\n      >\n        {children}\n      </button>\n    </span>\n  );\n};\n\nexport default Button;\n"],"file":"Button.js"}