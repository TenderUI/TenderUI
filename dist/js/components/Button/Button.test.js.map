{"version":3,"sources":["../../../../src/components/Button/Button.test.tsx"],"names":["testLabel","describe","afterEach","cleanup","it","getByText","element","expect","toBeInTheDocument","closest","toHaveAttribute","handleClick","jest","fn","fireEvent","click","toHaveBeenCalled","not","toHaveClass","container","firstChild"],"mappings":"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","sourcesContent":["import { cleanup, fireEvent, render } from '@testing-library/react';\nimport React from 'react';\nimport Button from './Button';\n\nconst testLabel = 'A button';\n\ndescribe('Button', () => {\n  afterEach(cleanup);\n\n  it('displays the label', () => {\n    const { getByText } = render(<Button>{testLabel}</Button>);\n    const element = getByText(testLabel);\n    expect(element).toBeInTheDocument();\n  });\n\n  it('can be of the type submit', () => {\n    const { getByText } = render(<Button type='submit'>{testLabel}</Button>);\n    const element = getByText(testLabel);\n    expect(element.closest('button')).toHaveAttribute('type', 'submit');\n  });\n\n  it('can be of the type reset', () => {\n    const { getByText } = render(<Button type='reset'>{testLabel}</Button>);\n    const element = getByText(testLabel);\n    expect(element.closest('button')).toHaveAttribute('type', 'reset');\n  });\n\n  it('can be of the type button', () => {\n    const { getByText } = render(<Button type='button'>{testLabel}</Button>);\n    const element = getByText(testLabel);\n    expect(element.closest('button')).toHaveAttribute('type', 'button');\n  });\n\n  it('is of the type button by default', () => {\n    const { getByText } = render(<Button>{testLabel}</Button>);\n    const element = getByText(testLabel);\n    expect(element.closest('button')).toHaveAttribute('type', 'button');\n  });\n\n  it('handles clicks', () => {\n    const handleClick = jest.fn();\n    const { getByText } = render(<Button onClick={handleClick}>{testLabel}</Button>);\n    const element = getByText(testLabel);\n    fireEvent.click(element);\n    expect(handleClick).toHaveBeenCalled();\n  });\n\n  it('ignores clicks when disabled', () => {\n    const handleClick = jest.fn();\n    const { getByText } = render(<Button onClick={handleClick} disabled>{testLabel}</Button>);\n    const element = getByText(testLabel);\n    fireEvent.click(element);\n    expect(handleClick).not.toHaveBeenCalled();\n  });\n\n  it('supports small size', () => {\n    const { getByText } = render(<Button size='small'>{testLabel}</Button>);\n    const element = getByText(testLabel);\n    expect(element.closest('button')).toHaveClass('small');\n  });\n\n  it('supports aria-label attribute', () => {\n    const { container } = render(<Button ariaLabel={testLabel}></Button>);\n    expect(container.firstChild).toHaveAttribute('aria-label', testLabel);\n  });\n});\n"],"file":"Button.test.js"}