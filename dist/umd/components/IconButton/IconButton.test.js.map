{"version":3,"sources":["../../../../src/components/IconButton/IconButton.test.tsx"],"names":["childIcon","ariaLabel","describe","afterEach","it","container","render","expect","handleClick","jest","element","fireEvent"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAKA;AAEA,QAAMA,SAAS,GAAA,aAAG,gBAAA,aAAA,CAAA,wBAAA,EAAlB,IAAkB,CAAlB;;AACA,QAAMC,SAAS,GAAf,YAAA;AAEAC,EAAAA,QAAQ,CAAA,YAAA,EAAe,MAAM;AAC3BC,IAAAA,SAAS,CADkB,cAClB,CAATA,CAD2B,CAG3B;AACA;AACA;AACA;AACA;AACA;;AAEAC,IAAAA,EAAE,CAAA,2BAAA,EAA8B,MAAM;AACpC,YAAM;AAAEC,QAAAA;AAAF,UAAgBC,oBAAM,aAAC,gBAAA,aAAA,CAAA,oBAAA,EAAA;AAAY,QAAA,IAAI,EAAhB,QAAA;AAA0B,QAAA,SAAS,EAAC;AAApC,OAAA,EAA7B,SAA6B,CAAPA,CAAtB;AACAC,MAAAA,MAAM,CAACF,SAAS,CAAhBE,UAAM,CAANA,CAAAA,eAAAA,CAAAA,MAAAA,EAAAA,QAAAA;AAFFH,KAAE,CAAFA;AAKAA,IAAAA,EAAE,CAAA,0BAAA,EAA6B,MAAM;AACnC,YAAM;AAAEC,QAAAA;AAAF,UAAgBC,oBAAM,aAAC,gBAAA,aAAA,CAAA,oBAAA,EAAA;AAAY,QAAA,IAAI,EAAhB,OAAA;AAAyB,QAAA,SAAS,EAAEL;AAApC,OAAA,EAA7B,SAA6B,CAAPK,CAAtB;AACAC,MAAAA,MAAM,CAACF,SAAS,CAAhBE,UAAM,CAANA,CAAAA,eAAAA,CAAAA,MAAAA,EAAAA,OAAAA;AAFFH,KAAE,CAAFA;AAKAA,IAAAA,EAAE,CAAA,2BAAA,EAA8B,MAAM;AACpC,YAAM;AAAEC,QAAAA;AAAF,UAAgBC,oBAAM,aAAC,gBAAA,aAAA,CAAA,oBAAA,EAAA;AAAY,QAAA,IAAI,EAAhB,QAAA;AAA0B,QAAA,SAAS,EAAEL;AAArC,OAAA,EAA7B,SAA6B,CAAPK,CAAtB;AACAC,MAAAA,MAAM,CAACF,SAAS,CAAhBE,UAAM,CAANA,CAAAA,eAAAA,CAAAA,MAAAA,EAAAA,QAAAA;AAFFH,KAAE,CAAFA;AAKAA,IAAAA,EAAE,CAAA,kCAAA,EAAqC,MAAM;AAC3C,YAAM;AAAEC,QAAAA;AAAF,UAAgBC,oBAAM,aAAC,gBAAA,aAAA,CAAA,oBAAA,EAAA;AAAY,QAAA,SAAS,EAAEL;AAAvB,OAAA,EAA7B,SAA6B,CAAPK,CAAtB;AACAC,MAAAA,MAAM,CAACF,SAAS,CAAhBE,UAAM,CAANA,CAAAA,eAAAA,CAAAA,MAAAA,EAAAA,QAAAA;AAFFH,KAAE,CAAFA;AAKAA,IAAAA,EAAE,CAAA,gBAAA,EAAmB,MAAM;AACzB,YAAMI,WAAW,GAAGC,IAAI,CAAxB,EAAoBA,EAApB;AACA,YAAM;AAAEJ,QAAAA;AAAF,UAAgBC,oBAAM,aAAC,gBAAA,aAAA,CAAA,oBAAA,EAAA;AAAY,QAAA,OAAO,EAAnB,WAAA;AAAkC,QAAA,SAAS,EAAEL;AAA7C,OAAA,EAA7B,SAA6B,CAAPK,CAAtB;AACA,YAAMI,OAAO,GAAGL,SAAS,CAAzB,UAAA;;AACAM,uBAAAA,KAAAA,CAAAA,OAAAA;;AACAJ,MAAAA,MAAM,CAANA,WAAM,CAANA,CAAAA,gBAAAA;AALFH,KAAE,CAAFA;AAQAA,IAAAA,EAAE,CAAA,8BAAA,EAAiC,MAAM;AACvC,YAAMI,WAAW,GAAGC,IAAI,CAAxB,EAAoBA,EAApB;AACA,YAAM;AAAEJ,QAAAA;AAAF,UAAgBC,oBAAM,aAAC,gBAAA,aAAA,CAAA,oBAAA,EAAA;AAAY,QAAA,OAAO,EAAnB,WAAA;AAAkC,QAAA,SAAS,EAA3C,SAAA;AAAwD,QAAA,QAAQ,EAAA;AAAhE,OAAA,EAA7B,SAA6B,CAAPA,CAAtB;AACA,YAAMI,OAAO,GAAGL,SAAS,CAAzB,UAAA;;AACAM,uBAAAA,KAAAA,CAAAA,OAAAA;;AACAJ,MAAAA,MAAM,CAANA,WAAM,CAANA,CAAAA,GAAAA,CAAAA,gBAAAA;AALFH,KAAE,CAAFA;AAQAA,IAAAA,EAAE,CAAA,qBAAA,EAAwB,MAAM;AAC9B,YAAM;AAAEC,QAAAA;AAAF,UAAgBC,oBAAM,aAAC,gBAAA,aAAA,CAAA,oBAAA,EAAA;AAAY,QAAA,IAAI,EAAhB,OAAA;AAAyB,QAAA,SAAS,EAAEL;AAApC,OAAA,EAA7B,SAA6B,CAAPK,CAAtB;AACAC,MAAAA,MAAM,CAACF,SAAS,CAAhBE,UAAM,CAANA,CAAAA,WAAAA,CAAAA,OAAAA;AAFFH,KAAE,CAAFA;AAKAA,IAAAA,EAAE,CAAA,+BAAA,EAAkC,MAAM;AACxC,YAAM;AAAEC,QAAAA;AAAF,UAAgBC,oBAAM,aAAC,gBAAA,aAAA,CAAA,oBAAA,EAAA;AAAY,QAAA,SAAS,EAAEL;AAAvB,OAAA,EAA7B,SAA6B,CAAPK,CAAtB;AACAC,MAAAA,MAAM,CAACF,SAAS,CAAhBE,UAAM,CAANA,CAAAA,eAAAA,CAAAA,YAAAA,EAAAA,SAAAA;AAFFH,KAAE,CAAFA;AAnDFF,GAAQ,CAARA","sourcesContent":["import { cleanup, render, fireEvent } from '@testing-library/react';\nimport React from 'react';\nimport { ReactComponent as Icon } from '../../img/icons/icon-flag.svg';\nimport IconButton from './IconButton';\n\n// @fixme Review tests and fix issues.\n\nconst childIcon = <Icon />;\nconst ariaLabel = 'Test label';\n\ndescribe('IconButton', () => {\n  afterEach(cleanup);\n\n  // it('displays the label', () => {\n  //   const { container } = render(<IconButton ariaLabel=\"Submit\">{childIcon}</IconButton>);\n  //   // const element = container.firstChild;\n  //   expect(container.firstChild).toMatch(childIcon);\n  //   // expect(element).toBeInTheDocument();\n  // });\n\n  it('can be of the type submit', () => {\n    const { container } = render(<IconButton type='submit' ariaLabel=\"Submit\">{childIcon}</IconButton>);\n    expect(container.firstChild).toHaveAttribute('type', 'submit');\n  });\n\n  it('can be of the type reset', () => {\n    const { container } = render(<IconButton type='reset' ariaLabel={ariaLabel}>{childIcon}</IconButton>);\n    expect(container.firstChild).toHaveAttribute('type', 'reset');\n  });\n\n  it('can be of the type button', () => {\n    const { container } = render(<IconButton type='button' ariaLabel={ariaLabel}>{childIcon}</IconButton>);\n    expect(container.firstChild).toHaveAttribute('type', 'button');\n  });\n\n  it('is of the type button by default', () => {\n    const { container } = render(<IconButton ariaLabel={ariaLabel}>{childIcon}</IconButton>);\n    expect(container.firstChild).toHaveAttribute('type', 'button');\n  });\n\n  it('handles clicks', () => {\n    const handleClick = jest.fn();\n    const { container } = render(<IconButton onClick={handleClick} ariaLabel={ariaLabel}>{childIcon}</IconButton>);\n    const element = container.firstChild;\n    fireEvent.click(element);\n    expect(handleClick).toHaveBeenCalled();\n  });\n\n  it('ignores clicks when disabled', () => {\n    const handleClick = jest.fn();\n    const { container } = render(<IconButton onClick={handleClick} ariaLabel={ariaLabel} disabled>{childIcon}</IconButton>);\n    const element = container.firstChild;\n    fireEvent.click(element);\n    expect(handleClick).not.toHaveBeenCalled();\n  });\n\n  it('supports small size', () => {\n    const { container } = render(<IconButton size='small' ariaLabel={ariaLabel}>{childIcon}</IconButton>);\n    expect(container.firstChild).toHaveClass('small');\n  });\n\n  it('supports aria-label attribute', () => {\n    const { container } = render(<IconButton ariaLabel={ariaLabel}>{childIcon}</IconButton>);\n    expect(container.firstChild).toHaveAttribute('aria-label', ariaLabel);\n  });\n});\n"],"file":"IconButton.test.js"}