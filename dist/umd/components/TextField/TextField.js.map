{"version":3,"sources":["../../../../src/components/TextField/TextField.tsx"],"names":["type","size","shape","disabled","className","placeholder","tabIndex","leftIcon","rightIcon","TextField","rest","classes","classNames","styles","leftIconAttributes","leftIconElement","cloneElement","rightIconAttributes","rightIconElement","inputClasses"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA;;;AAGA,QAAMS,SAAiC,GAAG,IAAA,IASpC;AAAA,QATqC;AACzCT,MAAAA,IAAI,GADqC,MAAA;AAEzCC,MAAAA,IAAI,GAFqC,QAAA;AAGzCC,MAAAA,KAAK,GAHoC,QAAA;AAIzCC,MAAAA,QAAQ,GAJiC,KAAA;AAAA,MAAA,SAAA;AAAA,MAAA,QAAA;AAOzCK,MAAAA;AAPyC,QASrC,IAAA;AAAA,QADDE,IACC,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,UAAA,EAAA,WAAA,EAAA,UAAA,EAAA,WAAA,CAAA,CAAA;;AACJ,UAAMC,OAAO,GAAGC,oBACdC,0BADwB,OAAVD,EAEd,0BAFwB,IAExB,CAFcA,EAGd,0BAHwB,KAGxB,CAHcA,EAId;AAAE,OAAC,0BAAD,QAAA,GAA4BT;AAA9B,KAJcS,EAAhB,SAAgBA,CAAhB;;AAQA,UAAME,kBAAkB,GAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,2BAAA,CAAA,EAAA,EAAA,EAAA;AAEtBV,MAAAA,SAAS,EAAEQ,oBAAWC,0BAAD,QAAVD;AAFW,KAAA,CAAxB;;AAIA,UAAMG,eAAe,GAAG,aAAA,yCAAA,QAAA,IAAA,aACpBC,yBAAY,QAAZA,EADoB,kBACpBA,CADoB,GAAxB,IAAA;;AAIA,UAAMC,mBAAmB,GAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,2BAAA,CAAA,EAAA,EAAA,EAAA;AAEvBb,MAAAA,SAAS,EAAEQ,oBAAWC,0BAAD,SAAVD;AAFY,KAAA,CAAzB;;AAIA,UAAMM,gBAAgB,GAAG,aAAA,yCAAA,SAAA,IAAA,aACrBF,yBAAY,SAAZA,EADqB,mBACrBA,CADqB,GAAzB,IAAA;AAIA,UAAMG,YAAY,GAAGP,oBAAWC,0BAAD,KAAVD,EAAyB;AAC5C,OAACC,0BAAD,WAAA,GAAsBE,eAAe,IADO,IAAA;AAE5C,OAACF,0BAAD,YAAA,GAAuBK,gBAAgB,IAAI;AAFC,KAAzBN,CAArB;AAKA,WAAA,aACE,gBAAA,aAAA,CAAA,MAAA,EAAA;AAAM,MAAA,SAAS,EAAED;AAAjB,KAAA,EAAA,eAAA,EAAA,aAEE,gBAAA,aAAA,CAAA,OAAA,EAAA,QAAA,CAAA;AACE,MAAA,SAAS,EADX,YAAA;AAEE,MAAA,IAAI,EAFN,IAAA;AAGE,MAAA,QAAQ,EAAER;AAHZ,KAAA,EAFF,IAEE,CAAA,CAFF,EADF,gBACE,CADF;AAvCF,GAAA;;;AA9CEH,IAAAA,I,6BAAO,M,EAAS,U;AAKhBC,IAAAA,I,6BAAO,Q,EAAW,O,EAAU,O;AAK5BC,IAAAA,K,6BAAQ,S,EAAY,Q;AAKpBC,IAAAA,Q;AAKAC,IAAAA,S;AAKAC,IAAAA,W;AAKAC,IAAAA,Q;AAKAC,IAAAA,Q;AAKAC,IAAAA,S;;oBA2DF,S","sourcesContent":["import classNames from \"clsx\";\nimport React, { cloneElement, FC, isValidElement, ReactElement } from \"react\";\nimport { a11yIconHiddenProps } from \"../../config\";\nimport styles from \"./TextField.module.scss\";\n\ntype TextFieldPropsType = {\n  /**\n   * Define button behavior. Default: text\n   */\n  type?: \"text\" | \"password\";\n\n  /**\n   * Define input size. Default: normal\n   */\n  size?: \"normal\" | \"small\" | \"large\";\n\n  /**\n   * Define the shape of the button (border radius). Default: rounded.\n   */\n  shape?: \"rounded\" | \"circle\";\n\n  /**\n   * Disable button. Default: false\n   */\n  disabled?: boolean;\n\n  /**\n   * Add a class name. Optional.\n   */\n  className?: string;\n\n  /**\n   * Add a placeholder text. Optional.\n   */\n  placeholder?: string;\n\n  /**\n   * Add a tabindex attribute. Optional.\n   */\n  tabIndex?: number;\n\n  /**\n   * Left icon. Optional.\n   */\n  leftIcon?: ReactElement;\n\n  /**\n   * Right icon. Optional.\n   */\n  rightIcon?: ReactElement;\n};\n\n/**\n * A text field.\n */\nconst TextField: FC<TextFieldPropsType> = ({\n  type = \"text\",\n  size = \"normal\",\n  shape = \"circle\",\n  disabled = false,\n  className,\n  leftIcon,\n  rightIcon,\n  ...rest\n}) => {\n  const classes = classNames(\n    styles.wrapper,\n    (styles as any)[size],\n    (styles as any)[shape],\n    { [(styles as any).disabled]: disabled },\n    className\n  );\n\n  const leftIconAttributes = {\n    ...a11yIconHiddenProps,\n    className: classNames(styles.leftIcon)\n  };\n  const leftIconElement = isValidElement(leftIcon)\n    ? cloneElement(leftIcon, leftIconAttributes)\n    : null;\n\n  const rightIconAttributes = {\n    ...a11yIconHiddenProps,\n    className: classNames(styles.rightIcon)\n  };\n  const rightIconElement = isValidElement(rightIcon)\n    ? cloneElement(rightIcon, rightIconAttributes)\n    : null;\n\n  const inputClasses = classNames(styles.input, {\n    [styles.hasLeftIcon]: leftIconElement != null,\n    [styles.hasRightIcon]: rightIconElement != null,\n  });\n\n  return (\n    <span className={classes}>\n      {leftIconElement}\n      <input\n        className={inputClasses}\n        type={type}\n        disabled={disabled}\n        {...rest}\n      />\n      {rightIconElement}\n    </span>\n  );\n};\n\nexport default TextField;\n"],"file":"TextField.js"}