{"version":3,"sources":["../../../../src/components/Input/Input.test.tsx"],"names":["describe","afterEach","it","container","render","expect","placeholder","getByPlaceholderText","inputNode","tabindex"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAIAA,EAAAA,QAAQ,CAAA,OAAA,EAAU,MAAM;AACtBC,IAAAA,SAAS,CAATA,cAAS,CAATA;AAEAC,IAAAA,EAAE,CAAA,oBAAA,EAAuB,MAAM;AAC7B,YAAM;AAAEC,QAAAA;AAAF,UAAgBC,oBAAM,aAAC,gBAAA,aAAA,CAAA,eAAA,EAA7B,IAA6B,CAAPA,CAAtB;AACAC,MAAAA,MAAM,CAACF,SAAS,CAAhBE,UAAM,CAANA,CAAAA,aAAAA,CAAAA,QAAAA;AAFFH,KAAE,CAAFA;AAKAA,IAAAA,EAAE,CAAA,uBAAA,EAA0B,MAAM;AAChC,YAAMI,WAAW,GAAjB,eAAA;AAEA,YAAM;AAAEC,QAAAA;AAAF,UAA2BH,oBAAM,aAAC,gBAAA,aAAA,CAAA,eAAA,EAAA;AAAO,QAAA,WAAW,EAAEE;AAApB,OAAA,CAAPF,CAAjC;AAEA,YAAMI,SAAS,GAAGD,oBAAoB,CAAtC,WAAsC,CAAtC;AAEAF,MAAAA,MAAM,CAANA,SAAM,CAANA,CAAAA,iBAAAA;AAPFH,KAAE,CAAFA;AAUAA,IAAAA,EAAE,CAAA,wBAAA,EAA2B,MAAM;AACjC,YAAMO,QAAQ,GAAd,CAAA;AAEA,YAAM;AAAEN,QAAAA;AAAF,UAAgBC,oBAAM,aAAC,gBAAA,aAAA,CAAA,eAAA,EAAA;AAAO,QAAA,QAAQ,EAAEK;AAAjB,OAAA,CAAPL,CAAtB;AAEAC,MAAAA,MAAM,CAACF,SAAS,CAAhBE,UAAM,CAANA,CAAAA,eAAAA,CAAAA,UAAAA,EAA0D,GAAEI,QAA5DJ,EAAAA;AALFH,KAAE,CAAFA;AAQAA,IAAAA,EAAE,CAAA,uBAAA,EAA0B,MAAM;AAChC,YAAMI,WAAW,GAAjB,eAAA;AAEA,YAAM;AAAEC,QAAAA;AAAF,UAA2BH,oBAAM,aAAC,gBAAA,aAAA,CAAA,eAAA,EAAA;AAAO,QAAA,WAAW,EAAEE;AAApB,OAAA,CAAPF,CAAjC;AAEA,YAAMI,SAAS,GAAGD,oBAAoB,CAAtC,WAAsC,CAAtC;AAEAF,MAAAA,MAAM,CAANA,SAAM,CAANA,CAAAA,iBAAAA;AAPFH,KAAE,CAAFA;AA1BFF,GAAQ,CAARA","sourcesContent":["import { cleanup, fireEvent, render } from '@testing-library/react';\nimport React from 'react';\nimport Input from './Input';\n\ndescribe('Input', () => {\n  afterEach(cleanup);\n\n  it('displays the input', () => {\n    const { container } = render(<Input />);\n    expect(container.firstChild).toContainHTML('<input');\n  });\n\n  it('renders a placeholder', () => {\n    const placeholder = 'A placeholder';\n\n    const { getByPlaceholderText } = render(<Input placeholder={placeholder} />);\n\n    const inputNode = getByPlaceholderText(placeholder);\n\n    expect(inputNode).toBeInTheDocument();\n  });\n\n  it('has tabindex attribute', () => {\n    const tabindex = 2;\n\n    const { container } = render(<Input tabIndex={tabindex} />);\n\n    expect(container.firstChild).toHaveAttribute('tabindex', `${tabindex}`);\n  });\n\n  it('renders a placeholder', () => {\n    const placeholder = 'A placeholder';\n\n    const { getByPlaceholderText } = render(<Input placeholder={placeholder} />);\n\n    const inputNode = getByPlaceholderText(placeholder);\n\n    expect(inputNode).toBeInTheDocument();\n  });\n});\n"],"file":"Input.test.js"}