{"version":3,"sources":["../../../../src/components/Button/Button.test.tsx"],"names":["testLabel","describe","afterEach","it","getByText","render","element","expect","handleClick","jest","fireEvent"],"mappings":"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","sourcesContent":["import { cleanup, fireEvent, render } from '@testing-library/react';\nimport React from 'react';\nimport Button from './Button';\n\nconst testLabel = 'A button';\n\ndescribe('Button', () => {\n  afterEach(cleanup);\n\n  it('displays the label', () => {\n    const { getByText } = render(<Button>{testLabel}</Button>);\n    const element = getByText(testLabel);\n    expect(element).toBeInTheDocument();\n  });\n\n  it('can be of the type submit', () => {\n    const { getByText } = render(<Button type='submit'>{testLabel}</Button>);\n    const element = getByText(testLabel);\n    expect(element.closest('button')).toHaveAttribute('type', 'submit');\n  });\n\n  it('can be of the type reset', () => {\n    const { getByText } = render(<Button type='reset'>{testLabel}</Button>);\n    const element = getByText(testLabel);\n    expect(element.closest('button')).toHaveAttribute('type', 'reset');\n  });\n\n  it('can be of the type button', () => {\n    const { getByText } = render(<Button type='button'>{testLabel}</Button>);\n    const element = getByText(testLabel);\n    expect(element.closest('button')).toHaveAttribute('type', 'button');\n  });\n\n  it('is of the type button by default', () => {\n    const { getByText } = render(<Button>{testLabel}</Button>);\n    const element = getByText(testLabel);\n    expect(element.closest('button')).toHaveAttribute('type', 'button');\n  });\n\n  it('handles clicks', () => {\n    const handleClick = jest.fn();\n    const { getByText } = render(<Button onClick={handleClick}>{testLabel}</Button>);\n    const element = getByText(testLabel);\n    fireEvent.click(element);\n    expect(handleClick).toHaveBeenCalled();\n  });\n\n  it('ignores clicks when disabled', () => {\n    const handleClick = jest.fn();\n    const { getByText } = render(<Button onClick={handleClick} disabled>{testLabel}</Button>);\n    const element = getByText(testLabel);\n    fireEvent.click(element);\n    expect(handleClick).not.toHaveBeenCalled();\n  });\n\n  it('supports small size', () => {\n    const { getByText } = render(<Button size='small'>{testLabel}</Button>);\n    const element = getByText(testLabel);\n    expect(element.closest('button')).toHaveClass('small');\n  });\n});\n"],"file":"Button.test.js"}