{"version":3,"sources":["../../../../src/components/Button/Button.tsx"],"names":["Button","disabled","type","size","shape","ariaLabel","a11yProps","classes","classNames","styles"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;;;AAGA,QAAMA,MAAuC,GAAG,CAAC;AAAA,IAAA,OAAA;AAE/CC,IAAAA,QAAQ,GAFuC,KAAA;AAG/CC,IAAAA,IAAI,GAH2C,QAAA;AAI/CC,IAAAA,IAAI,GAJ2C,QAAA;AAK/CC,IAAAA,KAAK,GAL0C,QAAA;AAAA,IAAA,QAAA;AAAA,IAAA,SAAA;AAQ/CC,IAAAA;AAR+C,GAAD,KAS1C;AAEJ,UAAMC,SAAS,GAAGD,SAAS,GACzB;AAAE,oBAAcA;AAAhB,KADyB,GAA3B,IAAA;AAIA,UAAME,OAAO,GAAGC,oBACdC,uBADwB,aAAVD,EAEdC,uBAFwB,IAExBA,CAFcD,EAGdC,uBAHwB,KAGxBA,CAHcD,EAId;AAAC,OAACC,uBAAD,QAAA,GAAmBR;AAApB,KAJcO,EAAhB,SAAgBA,CAAhB;AAQA,WAAA,aACE,gBAAA,aAAA,CAAA,MAAA,EAAA;AAAM,MAAA,SAAS,EAAED;AAAjB,KAAA,EAAA,aACE,gBAAA,aAAA,CAAA,QAAA,EAAA,QAAA,CAAA;AACE,MAAA,SAAS,EAAEE,uBADb,MAAA;AAEE,MAAA,IAAI,EAFN,IAAA;AAGE,MAAA,OAAO,EAHT,OAAA;AAIE,MAAA,QAAQ,EAAER;AAJZ,KAAA,EAAA,SAAA,CAAA,EAFJ,QAEI,CADF,CADF;AAvBF,GAAA;;oBAsCA,M","sourcesContent":["import classNames from 'clsx';\nimport React, { FC, MouseEventHandler, PropsWithChildren } from 'react';\nimport styles from './Button.module.scss';\n\ntype ButtonPropsType = {\n  /**\n   * Define button behavior. Default: button\n   */\n  type?: 'button' | 'submit' | 'reset';\n\n  /**\n   * Define button size. Default: normal\n   */\n  size?: 'normal' | 'small' | 'large';\n\n  /**\n   * Define the shape of the button (border radius). Default: rounded.\n   */\n  shape?: 'rounded' | 'circle';\n\n  /**\n   * Disable button. Default: false\n   */\n  disabled?: boolean;\n\n  /**\n   * Register click event handler.\n   */\n  onClick?: MouseEventHandler;\n\n  /**\n   * Add a class name. Optional.\n   */\n  className?: string;\n\n  /**\n   * Define 'aria-label' attribute for screen readers. Optional.\n   */\n  ariaLabel?: string;\n}\n\ntype ButtonPropsTypeWithChildren = PropsWithChildren<ButtonPropsType>\n\n/**\n * A simple button.\n */\nconst Button: FC<ButtonPropsTypeWithChildren> = ({\n  onClick,\n  disabled = false,\n  type = 'button',\n  size = 'normal',\n  shape = 'circle',\n  children,\n  className,\n  ariaLabel\n}) => {\n  \n  const a11yProps = ariaLabel ? \n    { \"aria-label\": ariaLabel } : \n    null;\n\n  const classes = classNames(\n    styles.buttonWrapper,\n    styles[size],\n    styles[shape],\n    {[styles.disabled]: disabled},\n    className\n  );\n\n  return (\n    <span className={classes}>\n      <button\n        className={styles.button}\n        type={type}\n        onClick={onClick}\n        disabled={disabled}\n        {... a11yProps}\n      >\n        {children}\n      </button>\n    </span>\n  );\n};\n\nexport default Button;\n"],"file":"Button.js"}